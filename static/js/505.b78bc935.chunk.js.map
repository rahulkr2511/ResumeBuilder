{"version":3,"file":"static/js/505.b78bc935.chunk.js","mappings":"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","sources":["templates/Creative/CreativeResumeBasic.tsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useExtractComputedStyles } from '../../customHooks/useExtractComputedStyles';\nimport { Box, Divider } from '@mui/material';\nimport ResumeHeader from '../../components/ResumeHeader';\nimport ProfileImagePicker from '../../utils/ProfileImagePicker';\nimport { ICreativeResumeData } from '../../utils/CreativeResumeDefaultContent';\nimport RichTextField from '../../utils/RichTextField';\nimport { Colors } from '../../constants/Colors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { get } from 'http';\nimport { getCreativeResumeBasicData, setCreativeResumeBasicData } from './CreativeResumeBasicSlice';\nimport { downloadResumePDF } from '../../utils/downloadResumePDF';\nimport '../../styles/CreativeResumeBasic.css';\n\n/**\n * \n * @returns The CreateResumeBasic component renders a creative resume template\n *          allowing users to edit their resume details, save changes, and download it as a PDF.\n *          It uses Material-UI for styling and layout, and integrates with Redux for state management.\n *          The component includes features like rich text editing, dynamic section handling,\n *          and PDF generation with exact dimensions and styles.\n */\n\nconst CreateResumeBasic = () => {\n    const resumeRef = useRef<HTMLDivElement>(null);\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const defaultResumeContentFromStore = useSelector(getCreativeResumeBasicData);\n    const [resumeData, setResumeData] = React.useState<ICreativeResumeData>(defaultResumeContentFromStore);\n    \n    const handleSectionChange = (section: keyof ICreativeResumeData, field: 'heading' | 'content', value: string) => {\n        setResumeData(prev => ({\n            ...prev,\n            [section]: {\n                ...prev[section],\n                [field]: value\n            }\n        }));\n    };\n\n    const handleImageSelect = (imageUrl: string) => {\n        setResumeData(prev => ({\n            ...prev,\n            profilePhoto: {\n                heading: \"Profile Photo\",\n                content: imageUrl\n            }\n        }));\n    };\n\n    /**\n     * * Custom hook to extract computed styles from the resume container\n     */\n    const { extractComputedStyles } = useExtractComputedStyles({\n        containerClass: 'resume-container',\n        skipProperties: ['list-style', 'cursor'] // Skip cursor styles for PDF export\n    });\n\n    const handleBack = () => {\n        navigate(`/`);\n    }\n\n    const handleSave = () => {\n        dispatch(setCreativeResumeBasicData(resumeData));\n    }\n\n    const handleDownloadPDF = async () => {\n        /**\n         * * * Function to download the resume as a PDF\n         * * * It uses the `downloadResumePDF` utility function to generate the PDF\n         * * * with the current resume data and styles.\n         * * * The `extractComputedStyles` function is used to get the styles from the resume container.\n         * * * If an error occurs during PDF generation, it logs the error to the console.\n         * * * @async\n         * * * @function handleDownloadPDF\n         * * * @returns {Promise<void>} A promise that resolves when the PDF is downloaded\n         * * * @throws {Error} If there is an error during PDF generation\n         * * * @description\n         * * * This function is triggered when the user clicks the download button in the resume header.\n         * * * It generates a PDF of the resume using the current data and styles,\n         * * * allowing users to save or print their resume in a professional format.\n         * * * It ensures that the PDF matches the visual layout of the resume displayed on the screen.\n         * *\n         */\n       await downloadResumePDF({\n                   resumeRef,\n                   extractComputedStyles,\n                   onError: (error) => {\n                       console.error('Error generating PDF:', error);\n                   }\n               });\n    }\n\n    return (\n        <div className=\"resume-wrapper\">\n            <ResumeHeader \n                onBack={handleBack}\n                onSave={handleSave}\n                onDownload={handleDownloadPDF}\n            />\n\n            <Box \n                component=\"main\"\n                sx={{\n                    marginTop: '64px',\n                    padding: '24px',\n                    minHeight: 'calc(100vh - 64px)',\n                    backgroundColor: Colors.BACKGROUND.LIGHT\n                }}\n            >\n                <div className=\"resume-container\" ref={resumeRef}>\n                    <Box sx={{ \n                        display: 'flex',\n                        flexDirection: { xs: 'column', md: 'row' },\n                        gap: 0\n                    }}>\n                        <Box sx={{ \n                            flex: { xs: '1 1 100%', md: '0 0 40%' },\n                            display: 'flex',\n                            flexDirection: 'column',\n                            borderRadius: { xs: '8px 8px 0 0', md: '8px 0 0 8px' },\n                            overflow: 'hidden'\n                        }}>\n                            <Box sx={{ \n                                backgroundColor: Colors.BACKGROUND.CREAM,\n                                color: Colors.TEXT.DARK,\n                                padding: '32px',\n                                flex: '0 0 auto',\n                                borderTopLeftRadius: '8px',\n                                borderTopRightRadius: { xs: '8px', md: '0' }\n                            }}>\n                                <ProfileImagePicker \n                                    onImageSelect={handleImageSelect}\n                                    size={150}\n                                    backgroundColor={Colors.BACKGROUND.CREAM}\n                                    containerStyle={{ marginBottom: '24px' }}\n                                    tooltipText=\"Add Profile Photo\"\n                                    initialImage={resumeData.profilePhoto?.content || ''}\n                                />\n                                <Box sx={{ mb: 4 }}>\n                                    <RichTextField\n                                        value={resumeData.contact.content}\n                                        onChange={(value) => handleSectionChange(\"contact\", \"content\", value)}\n                                    />\n                                </Box>\n                            </Box>\n                            <Box sx={{ \n                                backgroundColor: Colors.BACKGROUND.WHITE,\n                                color: Colors.TEXT.DARK,\n                                padding: '32px',\n                                flex: '1 1 auto',\n                                display: 'flex',\n                                flexDirection: 'column',\n                                gap: 4\n                            }}>\n                                <Box>\n                                    <Box sx={{ mb: 2 }}>\n                                        <RichTextField\n                                            value={`<div style=\"text-align: left; font-size: 18px; font-weight: bold; margin: 0; width: 100%;\">${resumeData.skills.heading}</div>`}\n                                            onChange={(value) => handleSectionChange(\"skills\", \"heading\", value.replace(/<[^>]*>/g, ''))}\n                                            isHeading={true}\n                                        />\n                                        <Divider sx={{ borderColor: 'black', borderWidth: 1, mt: 1 }} />\n                                    </Box>\n                                    <RichTextField\n                                        value={resumeData.skills.content}\n                                        onChange={(value) => handleSectionChange(\"skills\", \"content\", value)}\n                                    />\n                                </Box>\n                                <Box>\n                                    <Box sx={{ mb: 2 }}>\n                                        <RichTextField\n                                            value={`<div style=\"text-align: left; font-size: 18px; font-weight: bold; margin: 0; width: 100%;\">${resumeData.certification?.heading || 'CERTIFICATION'}</div>`}\n                                            onChange={(value) => handleSectionChange(\"certification\", \"heading\", value.replace(/<[^>]*>/g, ''))}\n                                            isHeading={true}\n                                        />\n                                        <Divider sx={{ borderColor: 'black', borderWidth: 1, mt: 1 }} />\n                                    </Box>\n                                    <RichTextField\n                                        value={resumeData.certification?.content || ''}\n                                        onChange={(value) => handleSectionChange(\"certification\", \"content\", value)}\n                                    />\n                                </Box>\n                                <Box>\n                                    <Box sx={{ mb: 2 }}>\n                                        <RichTextField\n                                            value={`<div style=\"text-align: left; font-size: 18px; font-weight: bold; margin: 0; width: 100%;\">${resumeData.membership?.heading || 'MEMBERSHIP'}</div>`}\n                                            onChange={(value) => handleSectionChange(\"membership\", \"heading\", value.replace(/<[^>]*>/g, ''))}\n                                            isHeading={true}\n                                        />\n                                        <Divider sx={{ borderColor: 'black', borderWidth: 1, mt: 1 }} />\n                                    </Box>\n                                    <RichTextField\n                                        value={resumeData.membership?.content || ''}\n                                        onChange={(value) => handleSectionChange(\"membership\", \"content\", value)}\n                                    />\n                                </Box>\n                            </Box>\n                        </Box>\n                        <Box sx={{ \n                            flex: { xs: '1 1 100%', md: '0 0 60%' },\n                            backgroundColor: Colors.BACKGROUND.WHITE,\n                            padding: '32px',\n                            borderRadius: { xs: '0 0 8px 8px', md: '0 8px 8px 0' },  \n                            borderTop: { xs: 'none', md: 'none' }  \n                        }}>\n                            <Box sx={{ \n                                mb: 4,\n                                backgroundColor: Colors.BACKGROUND.OLIVE_GREEN,\n                                color: Colors.BACKGROUND.WHITE,\n                                padding: '24px',\n                                marginTop: { xs: '0', md: '-32px' },  // Negative margin to connect with contact section\n                                marginLeft: { xs: '0', md: '-32px' },  // Negative margin to remove padding\n                                marginRight: { xs: '0', md: '-32px' }, // Negative margin to remove padding\n                                borderTopRightRadius: { xs: '8px', md: '0' },  // Adjust border radius\n                                borderTopLeftRadius: { xs: '8px', md: '0' }    // Adjust border radius\n                            }}>\n                                <Box sx={{ mb: 2 }}>\n                                    <RichTextField\n                                        value={`<h1 style=\"text-align: left; font-size: 18px; margin: 0; color: white;\">${resumeData.name.heading || 'NAME'}</h1>`}\n                                        onChange={(value) => handleSectionChange(\"name\", \"heading\", value.replace(/<[^>]*>/g, ''))}\n                                        isHeading={true}\n                                    />\n                                    <Divider sx={{ borderColor: Colors.BACKGROUND.WHITE, borderWidth: 1, mt: 1 }} />\n                                </Box>\n                                <RichTextField\n                                    value={resumeData.name.content}\n                                    onChange={(value) => handleSectionChange(\"name\", \"content\", value)}\n                                />\n                            </Box>\n                            <Box sx={{ mb: 4 }}>\n                                <Box sx={{ mb: 2 }}>\n                                    <RichTextField\n                                        value={`<div style=\"text-align: left; font-size: 18px; font-weight: bold; margin: 0; width: 100%;\">${resumeData.summary.heading}</div>`}\n                                        onChange={(value) => handleSectionChange(\"summary\", \"heading\", value.replace(/<[^>]*>/g, ''))}\n                                        isHeading={true}\n                                    />\n                                    <Divider sx={{ borderColor: 'black', borderWidth: 1, mt: 1 }} />\n                                </Box>\n                                <RichTextField\n                                    value={resumeData.summary.content}\n                                    onChange={(value) => handleSectionChange(\"summary\", \"content\", value)}\n                                />\n                            </Box>\n                            <Box sx={{ mb: 4 }}>\n                                <Box sx={{ mb: 2 }}>\n                                    <RichTextField\n                                        value={`<div style=\"text-align: left; font-size: 18px; font-weight: bold; margin: 0; width: 100%;\">${resumeData.experience.heading}</div>`}\n                                        onChange={(value) => handleSectionChange(\"experience\", \"heading\", value.replace(/<[^>]*>/g, ''))}\n                                        isHeading={true}\n                                    />\n                                    <Divider sx={{ borderColor: 'black', borderWidth: 1, mt: 1 }} />\n                                </Box>\n                                <RichTextField\n                                    value={resumeData.experience.content}\n                                    onChange={(value) => handleSectionChange(\"experience\", \"content\", value)}\n                                />\n                            </Box>\n                            <Box sx={{ mb: 4 }}>\n                                <Box sx={{ mb: 2 }}>\n                                    <RichTextField\n                                        value={`<div style=\"text-align: left; font-size: 18px; font-weight: bold; margin: 0; width: 100%;\">${resumeData.education.heading}</div>`}\n                                        onChange={(value) => handleSectionChange(\"education\", \"heading\", value.replace(/<[^>]*>/g, ''))}\n                                        isHeading={true}\n                                    />\n                                    <Divider sx={{ borderColor: 'black', borderWidth: 1, mt: 1 }} />\n                                </Box>\n                                <RichTextField\n                                    value={resumeData.education.content}\n                                    onChange={(value) => handleSectionChange(\"education\", \"content\", value)}\n                                />\n                            </Box>\n                        </Box>\n                    </Box>\n                    <Box sx={{ \n                        height: '30px',\n                        backgroundColor: Colors.BACKGROUND.OLIVE_GREEN,\n                        marginTop: '32px',\n                        width: '100%',\n                        borderBottomLeftRadius: '8px',\n                        borderBottomRightRadius: '8px'\n                    }} />\n                </div>\n            </Box>\n        </div>\n    );\n}\n\nexport default React.memo(CreateResumeBasic);"],"names":["CreateResumeBasic","_resumeData$profilePh","_resumeData$certifica","_resumeData$certifica2","_resumeData$membershi","_resumeData$membershi2","resumeRef","useRef","navigate","useNavigate","dispatch","useDispatch","defaultResumeContentFromStore","useSelector","getCreativeResumeBasicData","resumeData","setResumeData","React","handleSectionChange","section","field","value","prev","extractComputedStyles","useExtractComputedStyles","containerClass","skipProperties","_jsxs","className","children","_jsx","ResumeHeader","onBack","handleBack","onSave","handleSave","setCreativeResumeBasicData","onDownload","async","downloadResumePDF","onError","error","console","Box","component","sx","marginTop","padding","minHeight","backgroundColor","Colors","BACKGROUND","LIGHT","ref","display","flexDirection","xs","md","gap","flex","borderRadius","overflow","CREAM","color","TEXT","DARK","borderTopLeftRadius","borderTopRightRadius","ProfileImagePicker","onImageSelect","imageUrl","profilePhoto","heading","content","size","containerStyle","marginBottom","tooltipText","initialImage","mb","RichTextField","contact","onChange","WHITE","skills","replace","isHeading","Divider","borderColor","borderWidth","mt","certification","membership","borderTop","OLIVE_GREEN","marginLeft","marginRight","name","summary","experience","education","height","width","borderBottomLeftRadius","borderBottomRightRadius"],"sourceRoot":""}