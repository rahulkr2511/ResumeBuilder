{"version":3,"file":"static/js/133.5a4843dd.chunk.js","mappings":"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","sources":["templates/Business/BusinessResumeBasic.tsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useExtractComputedStyles } from '../../customHooks/useExtractComputedStyles';\nimport { Box, Divider } from '@mui/material';\nimport ResumeHeader from '../../components/ResumeHeader';\nimport ProfileImagePicker from '../../utils/ProfileImagePicker';\nimport { getBusinessBasicResumeData, setBusinessBasicResumeData } from './BusinessResumeBasicSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { IBusinessResumeData } from '../../utils/BusinessResumeDefaultContent';\nimport RichTextField from '../../utils/RichTextField';\nimport { Colors } from '../../constants/Colors';\nimport { downloadResumePDF } from '../../utils/downloadResumePDF';\nimport '../../styles/BusinessResumeBasic.css';\n\n/**\n * \n * @returns The BusinessResumeBasic component renders a business resume template\n *          allowing users to edit their resume details, save changes, and download it as a PDF.\n *          It uses Material-UI for styling and layout, and integrates with Redux for state management.\n *          The component includes features like rich text editing, dynamic section handling,\n *          and PDF generation with exact dimensions and styles.\n */\n\nconst BusinessResumeBasic = () => {\n    const resumeDataFromStore = useSelector(getBusinessBasicResumeData);\n    const dispatch = useDispatch();\n    const [resumeData, setResumeData] = useState<IBusinessResumeData>(resumeDataFromStore);\n    const resumeRef = useRef<HTMLDivElement>(null);\n    const navigate = useNavigate();\n\n    const handleSectionChange = (section: keyof IBusinessResumeData, field: 'heading' | 'content', value: string) => {\n        setResumeData(prev => ({\n            ...prev,\n            [section]: {\n                ...prev[section],\n                [field]: value\n            }\n        }));\n    };\n\n    const handleImageSelect = (imageUrl: string) => {\n        setResumeData(prev => ({\n            ...prev,\n            profilePhoto: {\n                heading: \"Profile Photo\",\n                content: imageUrl\n            }\n        }));\n    };\n\n    /**\n     * * Custom hook to extract computed styles from the resume container\n     */\n    const { extractComputedStyles } = useExtractComputedStyles({\n        containerClass: 'resume-container',\n        skipProperties: ['list-style', 'cursor'] // Skip cursor styles for PDF export\n    });\n\n    const handleBack = () => {\n        navigate(`/`);\n    }\n\n    const handleSave = () => {\n        dispatch(setBusinessBasicResumeData(resumeData));\n    }\n\n    const handleDownloadPDF = async () => {\n        /**\n         * * Downloads the resume as a PDF file.\n         * * It uses the `downloadResumePDF` utility function to generate the PDF\n         * * with the current resume data and styles.\n         * * The `extractComputedStyles` function is used to get the styles applied to the resume.\n         * * If an error occurs during PDF generation, it logs the error to the console.\n         * * @returns {Promise<void>}\n         *  * @throws {Error} If there is an error during PDF generation\n         *  * @description\n         *  * This function is triggered when the user clicks the download button.\n         *  * It generates a PDF of the current resume using the `downloadResumePDF` utility.\n         *  * The PDF will include all the styles and content as displayed in the resume editor.\n         *  * The generated PDF will be downloaded to the user's device.\n         *  * @example\n         *  * handleDownloadPDF();\n         *  * @see downloadResumePDF\n         *  * @see useExtractComputedStyles\n         *  * @see ResumeHeader\n         *  * @see ProfileImagePicker\n         *  * @see RichTextField    \n         */\n        await downloadResumePDF({\n            resumeRef,\n            extractComputedStyles,\n            onError: (error) => {\n                console.error('Error generating PDF:', error);\n            }\n        });\n    }\n \n    return (\n       <div className=\"resume-wrapper\">\n            <ResumeHeader \n                onBack={handleBack}\n                onSave={handleSave}\n                onDownload={handleDownloadPDF}\n            />\n\n            <Box \n                component=\"main\"\n                sx={{\n                    marginTop: '64px',\n                    padding: '24px',\n                    minHeight: 'calc(100vh - 64px)',\n                    backgroundColor: Colors.BACKGROUND.LIGHT\n                }}\n            >\n                <div className=\"resume-container business-resume\" ref={resumeRef}>\n                    <Box sx={{ \n                        display: 'flex',\n                        flexDirection: { xs: 'column', md: 'row' },\n                        gap: 0,\n                        backgroundColor: Colors.BACKGROUND.WHITE,\n                        borderRadius: '8px',\n                        overflow: 'hidden'\n                    }}>\n                        <Box sx={{ \n                            flex: { xs: '1 1 100%', md: '0 0 30%' },\n                            padding: '32px',\n                        }}>\n                            <ProfileImagePicker \n                                onImageSelect={handleImageSelect}\n                                size={180}\n                                backgroundColor={Colors.BACKGROUND.LIGHT}\n                                containerStyle={{ marginBottom: '32px' }}\n                                tooltipText=\"Add Profile Photo\"\n                                borderRadius=\"50%\"\n                                initialImage={resumeData.profilePhoto?.content || ''}\n                            />\n\n                            <Box sx={{ mb: 4 }}>\n                                <Box sx={{ \n                                    mb: 2,\n                                    backgroundColor: Colors.BLUE.DARK,\n                                    padding: '8px 16px',\n                                    borderRadius: '4px',\n                                    color: Colors.TEXT.WHITE\n                                }}>\n                                    <RichTextField\n                                        value={`<div style=\"text-align: left; font-size: 18px; font-weight: bold; margin: 0; width: 100%; color: ${Colors.TEXT.WHITE};\">${resumeData.profile.heading}</div>`}\n                                        onChange={(value) => handleSectionChange(\"profile\", \"heading\", value.replace(/<[^>]*>/g, ''))}\n                                        isHeading={true}\n                                    />\n                                </Box>\n                                <Box sx={{ color: '#000000' }}>\n                                    <RichTextField\n                                        value={resumeData.profile.content}\n                                        onChange={(value) => handleSectionChange(\"profile\", \"content\", value)}\n                                    />\n                                </Box>\n                            </Box>\n\n                            <Box sx={{ mb: 4 }}>\n                                <Box sx={{ \n                                    mb: 2,\n                                    backgroundColor: Colors.BLUE.DARK,\n                                    padding: '8px 16px',\n                                    borderRadius: '4px',\n                                    color: Colors.TEXT.WHITE\n                                }}>\n                                    <RichTextField\n                                        value={`<div style=\"text-align: left; font-size: 18px; font-weight: bold; margin: 0; width: 100%; color: ${Colors.TEXT.WHITE};\">${resumeData.contact.heading}</div>`}\n                                        onChange={(value) => handleSectionChange(\"contact\", \"heading\", value.replace(/<[^>]*>/g, ''))}\n                                        isHeading={true}\n                                    />\n                                </Box>\n                                <Box sx={{ color: '#000000' }}>\n                                    <RichTextField\n                                        value={resumeData.contact.content.replace(/(<[^>]*>)([^<]*)(<\\/[^>]*>)/g, '$1 $2 $3')}\n                                        onChange={(value) => handleSectionChange(\"contact\", \"content\", value)}\n                                    />\n                                </Box>\n                            </Box>\n                        </Box>\n\n                        <Box sx={{ \n                            flex: { xs: '1 1 100%', md: '0 0 70%' },\n                            padding: '32px',\n                            backgroundColor: Colors.BACKGROUND.WHITE\n                        }}>\n                            <Box sx={{ mb: 4 }}>\n                                <Box>\n                                    <div className=\"name-heading\">\n                                        <RichTextField\n                                            value={`<h1 style=\"color: #000000; font-weight: bold;\">${resumeData.name.content}</h1>`}\n                                            onChange={(value) => handleSectionChange(\"name\", \"content\", value.replace(/<[^>]*>/g, ''))}\n                                        />\n                                    </div>\n                                    <RichTextField\n                                        value={`<div style=\"text-align: left; font-size: 16px; margin: 0; width: 100%; color: #000000; font-style: italic\">${resumeData.title.content}</div>`}\n                                        onChange={(value) => handleSectionChange(\"title\", \"content\", value.replace(/<[^>]*>/g, ''))}\n                                        isHeading={true}\n                                    />\n                                </Box>\n                            </Box>\n\n                            <Box sx={{ mb: 4 }}>\n                                <Box sx={{ mb: 2 }}>\n                                    <Box sx={{ \n                                        backgroundColor: Colors.BLUE.DARK,\n                                        padding: '8px 16px',\n                                        borderRadius: '4px',\n                                        color: Colors.TEXT.WHITE\n                                    }}>\n                                        <RichTextField\n                                            value={`<div style=\"text-align: left; font-size: 18px; font-weight: bold; margin: 0; width: 100%; color: ${Colors.TEXT.WHITE};\">${resumeData.education.heading}</div>`}\n                                            onChange={(value) => handleSectionChange(\"education\", \"heading\", value.replace(/<[^>]*>/g, ''))}\n                                            isHeading={true}\n                                        />\n                                    </Box>\n                                </Box>\n                                <Box sx={{ color: '#000000' }}>\n                                    <RichTextField\n                                        value={resumeData.education.content}\n                                        onChange={(value) => handleSectionChange(\"education\", \"content\", value)}\n                                    />\n                                </Box>\n                            </Box>\n\n                            <Box sx={{ mb: 4 }}>\n                                <Box sx={{ mb: 2 }}>\n                                    <Box sx={{ \n                                        backgroundColor: Colors.BLUE.DARK,\n                                        padding: '8px 16px',\n                                        borderRadius: '4px',\n                                        color: Colors.TEXT.WHITE\n                                    }}>\n                                        <RichTextField\n                                            value={`<div style=\"text-align: left; font-size: 18px; font-weight: bold; margin: 0; width: 100%; color: ${Colors.TEXT.WHITE};\">${resumeData.language.heading}</div>`}\n                                            onChange={(value) => handleSectionChange(\"language\", \"heading\", value.replace(/<[^>]*>/g, ''))}\n                                            isHeading={true}\n                                        />\n                                    </Box>\n                                </Box>\n                                <Box sx={{ color: '#000000' }}>\n                                    <RichTextField\n                                        value={resumeData.language.content}\n                                        onChange={(value) => handleSectionChange(\"language\", \"content\", value)}\n                                    />\n                                </Box>\n                            </Box>\n\n                            <Box sx={{ mb: 4 }}>\n                                <Box sx={{ mb: 2 }}>\n                                    <Box sx={{ \n                                        backgroundColor: Colors.BLUE.DARK,\n                                        padding: '8px 16px',\n                                        borderRadius: '4px',\n                                        color: Colors.TEXT.WHITE\n                                    }}>\n                                        <RichTextField\n                                            value={`<div style=\"text-align: left; font-size: 18px; font-weight: bold; margin: 0; width: 100%; color: ${Colors.TEXT.WHITE};\">${resumeData.computerSkills.heading}</div>`}\n                                            onChange={(value) => handleSectionChange(\"computerSkills\", \"heading\", value.replace(/<[^>]*>/g, ''))}\n                                            isHeading={true}\n                                        />\n                                    </Box>\n                                </Box>\n                                <Box sx={{ color: '#000000' }}>\n                                    <RichTextField\n                                        value={resumeData.computerSkills.content}\n                                        onChange={(value) => handleSectionChange(\"computerSkills\", \"content\", value)}\n                                    />\n                                </Box>\n                            </Box>\n\n                            <Box sx={{ mb: 4 }}>\n                                <Box sx={{ mb: 2 }}>\n                                    <Box sx={{ \n                                        backgroundColor: Colors.BLUE.DARK,\n                                        padding: '8px 16px',\n                                        borderRadius: '4px',\n                                        color: Colors.TEXT.WHITE\n                                    }}>\n                                        <RichTextField\n                                            value={`<div style=\"text-align: left; font-size: 18px; font-weight: bold; margin: 0; width: 100%; color: ${Colors.TEXT.WHITE};\">${resumeData.workExperience.heading}</div>`}\n                                            onChange={(value) => handleSectionChange(\"workExperience\", \"heading\", value.replace(/<[^>]*>/g, ''))}\n                                            isHeading={true}\n                                        />\n                                    </Box>\n                                </Box>\n                                <Box sx={{ color: '#000000' }}>\n                                    <RichTextField\n                                        value={resumeData.workExperience.content}\n                                        onChange={(value) => handleSectionChange(\"workExperience\", \"content\", value)}\n                                    />\n                                </Box>\n                            </Box>\n                        </Box>\n                    </Box>\n                </div>\n            </Box>\n        </div>\n    );\n}\n\nexport default React.memo(BusinessResumeBasic);"],"names":["BusinessResumeBasic","_resumeData$profilePh","resumeDataFromStore","useSelector","getBusinessBasicResumeData","dispatch","useDispatch","resumeData","setResumeData","useState","resumeRef","useRef","navigate","useNavigate","handleSectionChange","section","field","value","prev","extractComputedStyles","useExtractComputedStyles","containerClass","skipProperties","_jsxs","className","children","_jsx","ResumeHeader","onBack","handleBack","onSave","handleSave","setBusinessBasicResumeData","onDownload","async","downloadResumePDF","onError","error","console","Box","component","sx","marginTop","padding","minHeight","backgroundColor","Colors","BACKGROUND","LIGHT","ref","display","flexDirection","xs","md","gap","WHITE","borderRadius","overflow","flex","ProfileImagePicker","onImageSelect","imageUrl","profilePhoto","heading","content","size","containerStyle","marginBottom","tooltipText","initialImage","mb","BLUE","DARK","color","TEXT","RichTextField","profile","onChange","replace","isHeading","contact","name","title","education","language","computerSkills","workExperience","React"],"sourceRoot":""}